{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","ExampleHandleClick.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","React","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAKaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACQ,qBAAKC,IAAI,WAAWC,IAAK,mEAC7B,6BAAKH,EAAMI,QAAQC,OACnB,4BAAIL,EAAMI,QAAQE,YCHbC,G,MAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,WCLlBC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCHG,G,wDApCb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAO1C,WAAS,IAAD,EAC4BC,KAAKN,MAA/Bd,EADF,EACEA,SAAUW,EADZ,EACYA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQC,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUL,SAAUqB,W,GA/BRI,c,OCKHC,GCTkBC,IAAMF,UDHf,SAAAG,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QEAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7a6d3324.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\n\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n            <img alt=\"monsters\" src={'https://robohash.org/${props.monster.id}?set=set2&size=180x180'} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/> \r\n        ))}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange}   \r\n    />\r\n)","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return(\n      <div className='App'>\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        placeholder='search monsters'\n        handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonsters}/>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass ExampleHandleClick extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.handleClick2 = this.handleClick1.bind(this);\r\n    }\r\n\r\n    handleClick1(){\r\n        console.log('button 1 clicked');\r\n    }\r\n\r\n    handleClick3 = () => console.log('button 3 clicked');\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleClick1()}>click1</button>\r\n                {/** Sayfa render olur olmaz bir kere calisir.\r\n                 * Sonrasında ekrandan click1 butonuna tıklasan da çalışmaz.*/}\r\n\r\n                <button onClick={this.handleClick1}>click2</button>\r\n                {/** handleClick1 metodunu çağırır. Her tıklamada metot çağrılır ve konsola kayıt atar. */}\r\n\r\n                <button onClick={this.handleClick2}>click3</button>\r\n                 {/** constructor içindeki this.handleClick2 = this.handleClick1.bind(this); koddan dolayı\r\n                  *  click3 e her tıklamada handleClick1() metodunu çağırır ve console kayıt atar.\r\n                  */}\r\n\r\n                <button onClick={this.handleClick3}>click4</button>\r\n                {/** handleClick3 = () metodunu çağırır ve click4 e her tıklamada consola kayıt atar. */}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExampleHandleClick;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ExampleHandleClick from './ExampleHandleClick';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n    {/** <ExampleHandleClick/> */} \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}